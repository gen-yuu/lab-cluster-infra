# ======================================================
# 物理/機能特性に基づいたグループ定義
# ======================================================
[gpu_nodes]
k8s-worker1 ansible_host=192.168.0.11
k8s-worker2 ansible_host=192.168.0.12
k8s-worker3 ansible_host=192.168.0.13
k8s-worker4 ansible_host=192.168.0.14
k8s-worker5 ansible_host=192.168.0.15
k8s-worker6 ansible_host=192.168.0.16
k8s-worker7 ansible_host=192.168.0.17
k8s-worker-a100 ansible_host=192.168.0.18

# (CPUのみのワーカーが追加されたら、ここにグループを作成)
# [cpu_nodes]
# k8s-cpu-worker1 ansible_host=192.168.0.20

# ======================================================
# 役割に基づいたグループ定義 (継承を利用)
# ======================================================
[k8s_worker:children]
gpu_nodes
# (cpu_nodes グループができたら、ここに追加)
# cpu_nodes

[k8s_control_plane]
k8s-master ansible_host=192.168.0.10

[k8s_cluster:children]
k8s_control_plane
k8s_worker

# ======================================================
# 変数定義
# ======================================================
[k8s_worker:vars]
# k8s-master を踏み台サーバーとして経由する設定
ansible_ssh_common_args='-o ProxyJump=k8s-master'

# 全てのk8sノードに共通で適用する変数
[k8s_cluster:vars]
ansible_user=srv-admin
ansible_python_interpreter=/usr/bin/python3
# 必要に応じて、使用するSSH秘密鍵を指定
ansible_ssh_private_key_file=~/.ssh/id_rsa